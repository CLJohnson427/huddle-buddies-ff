import{l as R}from"./index-2817854f.js";const E=[{year:2022,leagueId:"807045536300580864"},{year:2021,leagueId:"651495359322963968"},{year:2020,leagueId:"529745461166530560"},{year:2019,leagueId:"383723052850278400"},{year:2018,leagueId:"300327253869363200"}];function b(e=null){const s=E.reduce((t,a)=>t.year>a.year?t:a);return e==="id"?s.leagueId:e==="year"?s.year:""}async function k(e){var l;const s=y();if(((l=s.league)==null?void 0:l.league_id)===e)return s.league;const t=await fetch(`https://api.sleeper.app/v1/league/${e}`).catch(o=>{console.error(o)}),a=await(t==null?void 0:t.json().catch(o=>{console.error(o)}));if(t!=null&&t.ok)return s.$patch(o=>o.league=a),a;throw new Error(JSON.stringify(a))}async function P(e,s){var h,n;const t=y();if(((h=t.matchupData)==null?void 0:h.league_id)===e&&((n=t.matchupData)==null?void 0:n.week)===s)return t.matchupData;const a=[];for(let i=1;i<s;i++)a.push(fetch(`https://api.sleeper.app/v1/league/${e}/matchups/${i}`));const l=await Promise.allSettled(a).catch(i=>{console.error(i)}),o=[];for(const i of l)if(i.status==="fulfilled"){const c=await i.value.json().catch(r=>{console.error(r)});o.push(c)}else throw new Error(i.reason);const g={league_id:e,matchups:o,week:s};return t.$patch(i=>i.matchupData=g),g}async function C(e){var l;const s=y();if(((l=s.users)==null?void 0:l.league_id)===e)return s.users;const t=await fetch(`https://api.sleeper.app/v1/league/${e}/users`).catch(o=>{console.error(o)}),a=await(t==null?void 0:t.json().catch(o=>{console.error(o)}));if(t!=null&&t.ok){const o=$(a);return s.$patch(g=>g.users=o),o}else throw new Error(JSON.stringify(a))}function $(e){try{let s="";const t=new Map;for(const a of e)s=a.league_id,t.set(a.user_id,a);return{league_id:s,user:t}}catch(s){console.error(s)}}async function _(e,s){var o,g,h;const t=y();let a=null,l;if(((o=t.users)==null?void 0:o.league_id)===e&&((h=(g=t.users)==null?void 0:g.user)==null?void 0:h.has(s)))a=t.users.user.get(s);else{const n=await fetch(`https://api.sleeper.app/v1/league/${e}/users`).catch(c=>{console.error(c)}),i=await(n==null?void 0:n.json().catch(c=>{console.error(c)}));if(n!=null&&n.ok)a=$(i).user.get(s);else throw new Error(JSON.stringify(i))}return a?l={avatar:`https://sleepercdn.com/avatars/thumbs/${a.avatar}`,leagueId:e,managerName:a.display_name,teamName:a.metadata.team_name,userId:a.user_id}:l={avatar:"https://sleepercdn.com/images/v2/icons/player_default.webp",leagueId:e,managerName:"Unknown Manager",teamName:"Unknown Team",userId:"0"},l}async function v(e){var l;const s=y();if(((l=s.rosters)==null?void 0:l.league_id)===e)return s.rosters;const t=await fetch(`https://api.sleeper.app/v1/league/${e}/rosters`).catch(o=>{console.error(o)}),a=await(t==null?void 0:t.json().catch(o=>{console.error(o)}));if(t!=null&&t.ok){const o=await F(a);return s.$patch(g=>g.rosters=o),o}else throw new Error(JSON.stringify(a))}async function F(e){try{let s="";const t=new Map,a=[];for(const l of e){s=l.league_id;const o=l;o.manager=await _(l.league_id,l.owner_id),t.set(o.roster_id,o);for(const g of o.starters)a.push(g);if(o.reserve)for(const g of o.reserve)a.push(g)}return{league_id:s,roster:t,startersAndInjuredReserve:a}}catch(s){console.error(s)}}async function D(e="nfl"){var l;const s=y();if((l=s.sportState)!=null&&l.season)return s.sportState;const t=await fetch(`https://api.sleeper.app/v1/state/${e}`).catch(o=>{console.error(o)}),a=await(t==null?void 0:t.json().catch(o=>{console.error(o)}));if(t!=null&&t.ok)return s.$patch(o=>o.sportState=a),a;throw new Error(JSON.stringify(a))}async function A(e){var m;const s=y();if(((m=s.standings)==null?void 0:m.league_id)===e)return s.standings;const t=await k(e),a=await v(e),l=await C(e),o=await D(),g=t.season,h=t.settings.league_average_match===1;let n=t.settings.start_week;if(t.status==="in_season"?n=o.week:(t.status==="post_season"||t.status==="complete")&&(n=t.settings.playoff_week_start),t.status!=="in_season"&&t.status!=="post_season"&&t.status!=="complete"||n<2)return null;const i=await P(e,n);let c=new Map;for(const[d,u]of i.matchups.entries())c=await O(e,u,c,a,l,h,d+1);const r={league_id:t.league_id,medianMatch:h,roster:a.roster,seasonYear:g,standings:c};return s.$patch(d=>d.standings=r),r}async function O(e,s,t,a,l,o,g){const h={};let n=[];for(const c of s){h[c.matchup_id]||(h[c.matchup_id]=[]);const r=c.roster_id,m=a.roster.get(r),d=m?l.user.get(m.owner_id):void 0,u=d?d.user_id:"0",p=await _(e,u);t.has(r)||t.set(r,{manager:p,rosterId:r,divisionWins:0,divisionLosses:0,divisionTies:0,medianWins:0,medianLosses:0,medianTies:0,playerWins:0,playerLosses:0,playerTies:0,totalWins:0,totalLosses:0,totalTies:0,totalPointsFor:0,totalPointsAgainst:0,weeklyStandings:[]}),h[c.matchup_id].push({rosterId:r,division:m==null?void 0:m.settings.division,points:c.points}),o===!0&&n.push(c.points)}let i=0;if(o===!0){n=n.sort((m,d)=>m-d);const c=n.length,r=Math.floor(c/2);i=c%2!==0?n[r]:+((n[r-1]+n[r])/2).toFixed(2)}for(const c in h){const r=h[c][0],m=h[c][1],d=r.division&&m.division&&r.division===m.division,u=t.get(h[c][0].rosterId),p=t.get(h[c][1].rosterId);o===!0&&(r.points>i?(u.medianWins++,u.totalWins++):r.points<i?(u.medianLosses++,u.totalLosses++):r.points===i&&(u.medianTies++,u.totalLosses++),m.points>i?(p.medianWins++,p.totalWins++):m.points<i?(p.medianLosses++,p.totalLosses++):m.points===i&&(p.medianTies++,p.totalLosses++)),r.points>m.points?(u.playerWins++,u.totalWins++,p.playerLosses++,p.totalLosses++,d&&(u.divisionWins++,p.divisionLosses++)):m.points>r.points?(p.playerWins++,p.totalWins++,u.playerLosses++,u.totalLosses++,d&&(p.divisionWins++,u.divisionLosses++)):r.points===m.points&&(u.playerTies++,u.totalTies++,p.playerTies++,p.totalTies++,d&&(u.divisionTies++,p.divisionTies++)),u.totalPointsFor=+(u.totalPointsFor+r.points).toFixed(2),u.totalPointsAgainst=+(u.totalPointsAgainst+m.points).toFixed(2),p.totalPointsFor=+(p.totalPointsFor+m.points).toFixed(2),p.totalPointsAgainst=+(p.totalPointsAgainst+r.points).toFixed(2),u.weeklyStandings.push({week:g,medianWins:u.medianWins,medianLosses:u.medianLosses,medianTies:u.medianTies,playerWins:u.playerWins,playerLosses:u.playerLosses,playerTies:u.playerTies,totalWins:u.totalWins,totalLosses:u.totalLosses,totalTies:u.totalTies,pointsFor:r.points,pointsAgainst:m.points}),p.weeklyStandings.push({week:g,medianWins:p.medianWins,medianLosses:p.medianLosses,medianTies:p.medianTies,playerWins:p.playerWins,playerLosses:p.playerLosses,playerTies:p.playerTies,totalWins:p.totalWins,totalLosses:p.totalLosses,totalTies:p.totalTies,pointsFor:m.points,pointsAgainst:r.points}),t.set(h[c][0].rosterId,u),t.set(h[c][1].rosterId,p)}return t}async function N(e){const s=await fetch(`https://api.sleeper.app/v1/league/${e}/winners_bracket`).catch(a=>{console.error(a)}),t=await(s==null?void 0:s.json().catch(a=>{console.error(a)}));if(s!=null&&s.ok)return t;throw new Error(JSON.stringify(t))}async function M(e){var o;const s=y();if(((o=s.leagueChampion)==null?void 0:o.leagueId)===e)return s.leagueChampion;const t=await N(e),a=await v(e);if((await k(e)).status==="complete"){const g=t[t.length-1].r,h=t.filter(r=>r.r===g&&r.t1_from.w)[0],n=a.roster.get(h.w),i=n?n.owner_id:"0",c=await _(e,i);return s.$patch(r=>r.leagueChampion=c),c}else return null}const y=R("leagueStore",{state:()=>({darkTheme:!0,league:{},leagueChampion:{},leagueId:b("id"),leagueYear:b("year"),matchupData:{},rosters:{},standings:{},sport:"nfl",sportState:{},users:{}}),getters:{},actions:{changeTheme(){this.darkTheme=!this.darkTheme,this.darkTheme?document.documentElement.classList.add("dark"):document.documentElement.classList.remove("dark")},async getLeagueChampion(e=null){this.leagueChampion=await M(e||this.leagueId)},async getLeagueInfo(e=null){this.league=await k(e||this.leagueId)},async getLeagueRosters(e=null){this.rosters=await v(e||this.leagueId)},async getLeagueStandings(e=null){this.standings=await A(e||this.leagueId)},async getLeagueMatchupData(e=null,s){this.matchupData=await P(e||this.leagueId,s)},async getLeagueUsers(e=null){this.users=await C(e||this.leagueId)},async getSportState(e=null){this.sportState=await D(e||this.sport)}}}),j=["#3099de","#004586","#772fdc","#3cb44b","#ae1d1d","#f58231","#ffe119","#469990","#f032e6","#8c564b"];function U(e,{darkMode:s=!1,includeChartMarkers:t=!1}={}){const a=[],l=e.standings.get(1);if(l)for(let n=0;n<l.weeklyStandings.length;n++)a.push(l.weeklyStandings[n].week);const o={chart:{type:"line",zoom:{enabled:!1,autoScaleYaxis:!0},background:s?getComputedStyle(document.documentElement).getPropertyValue("--bg-secondary"):getComputedStyle(document.documentElement).getPropertyValue("--bg-primary")},theme:{mode:s?"dark":"light"},title:{text:`${e.seasonYear} Weekly Standings (Total Wins)`,align:"center"},dataLabels:{enabled:!1},tooltip:{enabled:!0,followCursor:!1,fillSeriesColor:!1,x:{show:!0,format:"dd MMM",formatter:function(n){return`Week ${n}`}}},colors:j,xaxis:{type:"category",categories:a,title:{text:"Week"}},yaxis:{min:0,max:e.medianMatch?a.length*2:a.length,tickAmount:a.length,title:{text:"Wins"}},markers:{size:t?5:0,shape:"circle",hover:{sizeOffset:3}}},g=[],h=[];for(const n of e.standings.values())h.push(n);for(const n of h){const i=[];n.weeklyStandings.forEach(c=>{i.push(c.totalWins)}),g.push({name:`${n.manager.managerName}`,data:i})}return{chartOptions:o,chartSeries:g}}function z(e,{darkMode:s=!1,stackedBarChart:t=!1,verticalBarChart:a=!0,includeWins:l=!0,includeLosses:o=!0,includeMedian:g=!0,combineMedian:h=!1}={}){const n=[],i=e.standings.get(1);if(i)for(let f=0;f<i.weeklyStandings.length;f++)n.push(i.weeklyStandings[f].week);const c=[],r=[],m=[],d=[],u=[],p=[],T=[],x=[],S=[];for(const f of e.standings.values())S.push(f);l?S.sort((f,W)=>W.totalWins-f.totalWins):!l&&o&&S.sort((f,W)=>W.totalLosses-f.totalLosses);for(const f of S)c.push(`${f.manager.managerName}`),m.push(f.totalWins),d.push(f.playerWins),u.push(f.medianWins),p.push(f.totalLosses),T.push(f.playerLosses),x.push(f.medianLosses);const L={chart:{type:"bar",stacked:!1,background:s?getComputedStyle(document.documentElement).getPropertyValue("--bg-secondary"):getComputedStyle(document.documentElement).getPropertyValue("--bg-primary")},plotOptions:{bar:{horizontal:!0,borderRadius:2}},colors:[],theme:{mode:s?"dark":"light"},dataLabels:{style:{colors:s?["#ffffff"]:["#000000"]}},title:{text:`${e.seasonYear} League Standings`,align:"center"},xaxis:{type:"category",categories:c,title:{text:""}},yaxis:{min:0,max:n.length,tickAmount:n.length,title:{text:""}}};t&&(L.chart.stacked=!0,L.yaxis.max=g?n.length*2:n.length),a&&(L.plotOptions.bar.horizontal=!1),h&&(L.yaxis.max=e.medianMatch?n.length*2:n.length);const w=[];return l&&(h?(w.push({name:"Total Wins",data:m}),r.push("#00e396")):(w.push({name:"Player Wins",data:d}),r.push("#00e396"),g&&(w.push({name:"Median Wins",data:u}),r.push("#008ffb")))),o&&(h?(w.push({name:"Total Losses",data:p}),r.push("#ff4560")):(w.push({name:"Player Losses",data:T}),r.push("#ff4560"),g&&(w.push({name:"Median Losses",data:x}),r.push("#feb019")))),L.colors=r,{chartOptions:L,chartSeries:w}}function J(e,{darkMode:s=!1,includeChartMarkers:t=!1}={}){const a=[],l=[],o=[],g=[],h=[];for(const i of e.standings.values())h.push(i);h.sort((i,c)=>c.totalWins-i.totalWins);for(const i of h)l.push(`${i.manager.managerName}`),o.push(i.totalPointsFor),g.push(i.totalPointsAgainst);return a.push({name:"Points For",data:o}),a.push({name:"Points Against",data:g}),{chartOptions:{chart:{type:"line",zoom:{enabled:!1},background:s?getComputedStyle(document.documentElement).getPropertyValue("--bg-secondary"):getComputedStyle(document.documentElement).getPropertyValue("--bg-primary")},theme:{mode:s?"dark":"light"},title:{text:`${e.seasonYear} Points For/Against`,align:"center"},colors:["#00e396","#ff4560"],xaxis:{type:"category",categories:l,title:{text:"Teams"}},yaxis:{title:{text:"Points"}},markers:{size:t?5:0,shape:"circle",hover:{sizeOffset:3}}},chartSeries:a}}const V=""+new URL("huddle-buddies-thumbnail-c0abcb8a.png",import.meta.url).href;export{V as _,J as a,U as b,z as c,b as g,E as l,y as u};
